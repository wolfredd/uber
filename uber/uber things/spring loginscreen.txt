// ignore_for_file: prefer_const_constructors
import 'dart:async';
import 'dart:convert';
import 'package:http/http.dart' as http;










import 'package:flutter/material.dart';
import 'package:uber/allWidgets/progressDialog.dart';
import 'package:uber/screens/registrationScreen.dart';
import 'package:fluttertoast/fluttertoast.dart';


import 'mainScreen.dart';

class LoginScreen extends StatelessWidget{

  TextEditingController emailTextEditingController = TextEditingController();
  TextEditingController passwordTextEditingController = TextEditingController();

  static const String idScreen = "login";

  @override
  Widget build(BuildContext context){
    return Scaffold(
      backgroundColor: Colors.white,
      body: SingleChildScrollView(
        child: Padding(
          padding: EdgeInsets.all(8.0),
          child: Column(
            // ignore: prefer_const_literals_to_create_immutables
            children: [
              SizedBox(height: 65.0,),
              Image(
                image: AssetImage('images/logo.png'),
                width: 350.0,
                height: 350.0,
                alignment: Alignment.center,
              ),
              SizedBox(height: 1,),
              Text(
                'Login as Rider',
                style: TextStyle(fontSize: 24, fontFamily: "Brand Bold"),
                textAlign: TextAlign.center,
                ),
        
        
                Padding(
                  padding: EdgeInsets.all(20),
                  child: Column(
                    // ignore: prefer_const_literals_to_create_immutables
                          children: [
        
                            SizedBox(height: 1,),
                            TextField(
                              controller: emailTextEditingController,
                              keyboardType: TextInputType.emailAddress,
                              decoration: InputDecoration(
                                labelText: "Email",
                                labelStyle: TextStyle(
                                  fontSize: 14
                                ),
                                hintStyle: TextStyle(
                                  color: Colors.grey,
                                  fontSize: 10,
                                )
                              ),
                              style: TextStyle(fontSize: 14),
                            ),
        
        
                            SizedBox(height: 1,),
                            TextField(
                              controller: passwordTextEditingController,
                              obscureText: true,
                              decoration: InputDecoration(
                                labelText: "Password",
                                labelStyle: TextStyle(
                                  fontSize: 14
                                ),
                                hintStyle: TextStyle(
                                  color: Colors.grey,
                                  fontSize: 10,
                                )
                              ),
                              style: TextStyle(fontSize: 14),
                            ),
        
        
                            SizedBox(height: 10,),
                            ElevatedButton(
                              onPressed: () {
                                //print('Login Button CLicked');
                                 if(!emailTextEditingController.text.contains('@')){
                                  displayToastMessage("Email is invalid", context);
                                }
                                else if(passwordTextEditingController.text.isEmpty){
                                  displayToastMessage("Password is mandatory", context);
                                }
                                else{
                                  //ridersService.saveUser(nameTextEditingController.text, emailTextEditingController.text, phoneTextEditingController.text, passwordTextEditingController.text);
                                  authenticate(emailTextEditingController.text, passwordTextEditingController.text, context);
                                }
                              },
                              style: ElevatedButton.styleFrom(
                                primary: Colors.yellow,
                                onPrimary: Colors.white,
        
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(24),
                                )
        
                              ),
                              child: Container(
                                height: 50.0,
                                child: Center(
                                  child: Text(
                                    "Login",
                                    style: TextStyle(fontSize: 18.0, fontFamily: "Brand Bold"),
                                    ),
                                ),
                              )
                            ),
                    ],
                  ),
                ),
        
                TextButton(onPressed:() {
                  Navigator.pushNamedAndRemoveUntil(context, RegistrationScreen.idScreen, (route) => false);
                  // print("CLicked");
                }, 
                child: 
                Text(
                  "Do not have an account? Register here.",
                )
                )
            ],
          ),
        ),
      )
    );

  }


Future<bool> authenticate(
      String email, String password, BuildContext context) async {

        showDialog(context: context, 
        barrierDismissible: false,
        builder: (BuildContext context)
        {
          return ProgressDialog(message: "Authenticating, Please wait...",);
        }
        );


        //create uri
        var uri = Uri.parse("http://10.0.2.2:8080/api/v1/auth/authenticate");
        //header
        Map<String, String> headers = {"Content-Type": "application/json"};
        //body
        Map data = {
          'email': '$email',
          'password': '$password',
        };
        //convert the above data into json
        var body = json.encode(data);
        var response = await http.post(uri, headers: headers, body: body);

        //print the response body
        print("${response.body}");

        if ( response.body.contains('token')){
          print("registered");
          displayToastMessage("You are logged in", context);
          Navigator.pushNamedAndRemoveUntil(context as BuildContext, MainScreen.idScreen, (route) => false);
          return true;
          

        }
        else{
          print("null not registered");
          displayToastMessage("Account does not exist", context);
          Navigator.pop(context);
          return false;

        }
  }
  
  displayToastMessage(String message, BuildContext context){
    Fluttertoast.showToast(msg: message);
  }

}
